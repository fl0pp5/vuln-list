{
  "Definition": [
    {
      "ID": "oval:org.altlinux.errata:def:20221798",
      "Version": "oval:org.altlinux.errata:def:20221798",
      "Class": "patch",
      "Metadata": {
        "Title": "ALT-PU-2022-1798: package `npm` update to version 6.14.16-alt1",
        "AffectedList": [
          {
            "Family": "unix",
            "Platforms": [
              "ALT Linux branch p10"
            ],
            "Products": [
              "ALT Server",
              "ALT Virtualization Server",
              "ALT Workstation",
              "ALT Workstation K",
              "ALT Education",
              "Simply Linux",
              "Starterkit"
            ]
          }
        ],
        "References": [
          {
            "RefID": "ALT-PU-2022-1798",
            "RefURL": "https://errata.altlinux.org/ALT-PU-2022-1798",
            "Source": "ALTPU"
          },
          {
            "RefID": "BDU:2022-00115",
            "RefURL": "https://bdu.fstec.ru/vul/2022-00115",
            "Source": "BDU"
          },
          {
            "RefID": "BDU:2022-00201",
            "RefURL": "https://bdu.fstec.ru/vul/2022-00201",
            "Source": "BDU"
          },
          {
            "RefID": "BDU:2022-00226",
            "RefURL": "https://bdu.fstec.ru/vul/2022-00226",
            "Source": "BDU"
          },
          {
            "RefID": "BDU:2022-02880",
            "RefURL": "https://bdu.fstec.ru/vul/2022-02880",
            "Source": "BDU"
          },
          {
            "RefID": "BDU:2022-03022",
            "RefURL": "https://bdu.fstec.ru/vul/2022-03022",
            "Source": "BDU"
          },
          {
            "RefID": "BDU:2022-03042",
            "RefURL": "https://bdu.fstec.ru/vul/2022-03042",
            "Source": "BDU"
          },
          {
            "RefID": "CVE-2021-32803",
            "RefURL": "https://nvd.nist.gov/vuln/detail/CVE-2021-32803",
            "Source": "CVE"
          },
          {
            "RefID": "CVE-2021-32804",
            "RefURL": "https://nvd.nist.gov/vuln/detail/CVE-2021-32804",
            "Source": "CVE"
          },
          {
            "RefID": "CVE-2021-37701",
            "RefURL": "https://nvd.nist.gov/vuln/detail/CVE-2021-37701",
            "Source": "CVE"
          },
          {
            "RefID": "CVE-2021-37712",
            "RefURL": "https://nvd.nist.gov/vuln/detail/CVE-2021-37712",
            "Source": "CVE"
          },
          {
            "RefID": "CVE-2021-37713",
            "RefURL": "https://nvd.nist.gov/vuln/detail/CVE-2021-37713",
            "Source": "CVE"
          },
          {
            "RefID": "CVE-2021-39134",
            "RefURL": "https://nvd.nist.gov/vuln/detail/CVE-2021-39134",
            "Source": "CVE"
          },
          {
            "RefID": "CVE-2021-39135",
            "RefURL": "https://nvd.nist.gov/vuln/detail/CVE-2021-39135",
            "Source": "CVE"
          }
        ],
        "Description": "This update upgrades npm to version 6.14.16-alt1. \nSecurity Fix(es):\n\n * BDU:2022-00115: Уязвимость библиотеки `@ npmcli / arborist` пакетного менеджера NPM, позволяющая нарушителю перезаписать файлы через манипуляцию с символическими ссылками\n\n * BDU:2022-00201: Уязвимость метода модуля Node.js для обработки tar архивов Node-tar, связанная с недостатками ограничения имени пути к каталогу, позволяющая нарушителю нарушить целостность данных, а также вызвать отказ в обслуживании\n\n * BDU:2022-00226: Уязвимость модуля Node.js для обработки tar архивов Node-tar, связанная с недостатками ограничения имени пути к каталогу, позволяющая нарушителю нарушить целостность данных, а также вызвать отказ в обслуживании\n\n * BDU:2022-02880: Уязвимость модуля Node.js для обработки tar архивов Node-tar, связанная с недостатками ограничения имени пути к каталогу, позволяющая нарушителю загрузить произвольные файлы и выполнить произвольный код\n\n * BDU:2022-03022: Уязвимость модуля Node.js для обработки tar архивов Node-tar, связанная с недостатками ограничения имени пути к каталогу, позволяющая нарушителю создать, перезаписать произвольные файлы и выполнить произвольный код\n\n * BDU:2022-03042: Уязвимость модуля Node-tar библиотеки Node.js, позволяющая нарушителю записывать произвольные файлы или выполнить произвольный код\n\n * CVE-2021-32803: The npm package \"tar\" (aka node-tar) before versions 6.1.2, 5.0.7, 4.4.15, and 3.2.3 has an arbitrary File Creation/Overwrite vulnerability via insufficient symlink protection. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.\n\n * CVE-2021-32804: The npm package \"tar\" (aka node-tar) before versions 6.1.1, 5.0.6, 4.4.14, and 3.3.2 has a arbitrary File Creation/Overwrite vulnerability due to insufficient absolute path sanitization. node-tar aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. This logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.2, 4.4.14, 5.0.6 and 6.1.1. Users may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths. See referenced GitHub Advisory for details. Be aware of CVE-2021-32803 which fixes a similar bug in later versions of tar.\n\n * CVE-2021-37701: The npm package \"tar\" (aka node-tar) before versions 4.4.16, 5.0.8, and 6.1.7 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. Additionally, a similar confusion could arise on case-insensitive filesystems. If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-9r2w-394v-53qc.\n\n * CVE-2021-37712: The npm package \"tar\" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include a directory with one form of the path, followed by a symbolic link with a different string that resolves to the same file system entity, followed by a file using the first form. By first creating a directory, and then replacing that directory with a symlink that had a different apparent name that resolved to the same entry in the filesystem, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-qq89-hq3f-393p.\n\n * CVE-2021-37713: The npm package \"tar\" (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory. This logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`. If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory. Additionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path. This only affects users of `node-tar` on Windows systems. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. There is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does. Users are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.\n\n * CVE-2021-39134: `@npmcli/arborist`, the library that calculates dependency trees and manages the `node_modules` folder hierarchy for the npm command line interface, aims to guarantee that package dependency contracts will be met, and the extraction of package contents will always be performed into the expected folder. This is, in part, accomplished by resolving dependency specifiers defined in `package.json` manifests for dependencies with a specific name, and nesting folders to resolve conflicting dependencies. When multiple dependencies differ only in the case of their name, Arborist's internal data structure saw them as separate items that could coexist within the same level in the `node_modules` hierarchy. However, on case-insensitive file systems (such as macOS and Windows), this is not the case. Combined with a symlink dependency such as `file:/some/path`, this allowed an attacker to create a situation in which arbitrary contents could be written to any location on the filesystem. For example, a package `pwn-a` could define a dependency in their `package.json` file such as `\"foo\": \"file:/some/path\"`. Another package, `pwn-b` could define a dependency such as `FOO: \"file:foo.tgz\"`. On case-insensitive file systems, if `pwn-a` was installed, and then `pwn-b` was installed afterwards, the contents of `foo.tgz` would be written to `/some/path`, and any existing contents of `/some/path` would be removed. Anyone using npm v7.20.6 or earlier on a case-insensitive filesystem is potentially affected. This is patched in @npmcli/arborist 2.8.2 which is included in npm v7.20.7 and above.\n\n * CVE-2021-39135: `@npmcli/arborist`, the library that calculates dependency trees and manages the node_modules folder hierarchy for the npm command line interface, aims to guarantee that package dependency contracts will be met, and the extraction of package contents will always be performed into the expected folder. This is accomplished by extracting package contents into a project's `node_modules` folder. If the `node_modules` folder of the root project or any of its dependencies is somehow replaced with a symbolic link, it could allow Arborist to write package dependencies to any arbitrary location on the file system. Note that symbolic links contained within package artifact contents are filtered out, so another means of creating a `node_modules` symbolic link would have to be employed. 1. A `preinstall` script could replace `node_modules` with a symlink. (This is prevented by using `--ignore-scripts`.) 2. An attacker could supply the target with a git repository, instructing them to run `npm install --ignore-scripts` in the root. This may be successful, because `npm install --ignore-scripts` is typically not capable of making changes outside of the project directory, so it may be deemed safe. This is patched in @npmcli/arborist 2.8.2 which is included in npm v7.20.7 and above. For more information including workarounds please see the referenced GHSA-gmw6-94gg-2rc2.",
        "Advisory": {
          "From": "errata.altlinux.org",
          "Severity": "High",
          "Rights": "Copyright 2023 BaseALT Ltd.",
          "Issued": {
            "Date": "2022-04-29"
          },
          "Updated": {
            "Date": "2022-04-29"
          },
          "bdu": [
            {
              "Cvss": "AV:L/AC:M/Au:N/C:P/I:P/A:P",
              "Cvss3": "AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
              "Cwe": "CWE-59, CWE-61",
              "Href": "https://bdu.fstec.ru/vul/2022-00115",
              "Impact": "High",
              "Public": "20210831",
              "CveID": "BDU:2022-00115"
            },
            {
              "Cvss": "AV:N/AC:M/Au:N/C:N/I:P/A:P",
              "Cvss3": "AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "Cwe": "CWE-22",
              "Href": "https://bdu.fstec.ru/vul/2022-00201",
              "Impact": "High",
              "Public": "20210724",
              "CveID": "BDU:2022-00201"
            },
            {
              "Cvss": "AV:N/AC:M/Au:N/C:N/I:P/A:P",
              "Cvss3": "AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "Cwe": "CWE-22",
              "Href": "https://bdu.fstec.ru/vul/2022-00226",
              "Impact": "High",
              "Public": "20210727",
              "CveID": "BDU:2022-00226"
            },
            {
              "Cvss": "AV:L/AC:M/Au:N/C:C/I:C/A:C",
              "Cvss3": "AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
              "Cwe": "CWE-22",
              "Href": "https://bdu.fstec.ru/vul/2022-02880",
              "Impact": "High",
              "Public": "20210831",
              "CveID": "BDU:2022-02880"
            },
            {
              "Cvss": "AV:L/AC:L/Au:N/C:C/I:C/A:C",
              "Cvss3": "AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
              "Cwe": "CWE-22, CWE-59",
              "Href": "https://bdu.fstec.ru/vul/2022-03022",
              "Impact": "High",
              "Public": "20210831",
              "CveID": "BDU:2022-03022"
            },
            {
              "Cvss": "AV:L/AC:M/Au:N/C:C/I:C/A:N",
              "Cvss3": "AV:L/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:N",
              "Cwe": "CWE-22, CWE-59",
              "Href": "https://bdu.fstec.ru/vul/2022-03042",
              "Impact": "High",
              "Public": "20210831",
              "CveID": "BDU:2022-03042"
            }
          ],
          "Cves": [
            {
              "Cvss": "AV:N/AC:M/Au:N/C:N/I:P/A:P",
              "Cvss3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "Cwe": "CWE-59",
              "Href": "https://nvd.nist.gov/vuln/detail/CVE-2021-32803",
              "Impact": "High",
              "Public": "20210803",
              "CveID": "CVE-2021-32803"
            },
            {
              "Cvss": "AV:N/AC:M/Au:N/C:N/I:P/A:P",
              "Cvss3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:H",
              "Cwe": "CWE-22",
              "Href": "https://nvd.nist.gov/vuln/detail/CVE-2021-32804",
              "Impact": "High",
              "Public": "20210803",
              "CveID": "CVE-2021-32804"
            },
            {
              "Cvss": "AV:L/AC:M/Au:N/C:P/I:P/A:P",
              "Cvss3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
              "Cwe": "CWE-22",
              "Href": "https://nvd.nist.gov/vuln/detail/CVE-2021-37701",
              "Impact": "High",
              "Public": "20210831",
              "CveID": "CVE-2021-37701"
            },
            {
              "Cvss": "AV:L/AC:M/Au:N/C:P/I:P/A:P",
              "Cvss3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
              "Cwe": "CWE-22",
              "Href": "https://nvd.nist.gov/vuln/detail/CVE-2021-37712",
              "Impact": "High",
              "Public": "20210831",
              "CveID": "CVE-2021-37712"
            },
            {
              "Cvss": "AV:L/AC:M/Au:N/C:P/I:P/A:P",
              "Cvss3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H",
              "Cwe": "CWE-22",
              "Href": "https://nvd.nist.gov/vuln/detail/CVE-2021-37713",
              "Impact": "High",
              "Public": "20210831",
              "CveID": "CVE-2021-37713"
            },
            {
              "Cvss": "AV:L/AC:M/Au:N/C:P/I:P/A:P",
              "Cvss3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
              "Cwe": "CWE-178",
              "Href": "https://nvd.nist.gov/vuln/detail/CVE-2021-39134",
              "Impact": "High",
              "Public": "20210831",
              "CveID": "CVE-2021-39134"
            },
            {
              "Cvss": "AV:L/AC:M/Au:N/C:P/I:P/A:P",
              "Cvss3": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
              "Cwe": "CWE-61",
              "Href": "https://nvd.nist.gov/vuln/detail/CVE-2021-39135",
              "Impact": "High",
              "Public": "20210831",
              "CveID": "CVE-2021-39135"
            }
          ],
          "AffectedCpeList": {
            "Cpe": [
              "cpe:/o:alt:kworkstation:10",
              "cpe:/o:alt:workstation:10",
              "cpe:/o:alt:server:10",
              "cpe:/o:alt:server-v:10",
              "cpe:/o:alt:education:10",
              "cpe:/o:alt:slinux:10",
              "cpe:/o:alt:starterkit:p10",
              "cpe:/o:alt:kworkstation:10.1",
              "cpe:/o:alt:workstation:10.1",
              "cpe:/o:alt:server:10.1",
              "cpe:/o:alt:server-v:10.1",
              "cpe:/o:alt:education:10.1",
              "cpe:/o:alt:slinux:10.1",
              "cpe:/o:alt:starterkit:10.1",
              "cpe:/o:alt:kworkstation:10.2",
              "cpe:/o:alt:workstation:10.2",
              "cpe:/o:alt:server:10.2",
              "cpe:/o:alt:server-v:10.2",
              "cpe:/o:alt:education:10.2",
              "cpe:/o:alt:slinux:10.2",
              "cpe:/o:alt:starterkit:10.2"
            ]
          }
        }
      },
      "Criteria": {
        "Operator": "AND",
        "Criterions": [
          {
            "TestRef": "oval:org.altlinux.errata:tst:2001",
            "Comment": "ALT Linux must be installed"
          }
        ],
        "Criterias": [
          {
            "Operator": "OR",
            "Criterions": [
              {
                "TestRef": "oval:org.altlinux.errata:tst:20221798001",
                "Comment": "npm is earlier than 0:6.14.16-alt1"
              }
            ]
          }
        ]
      }
    }
  ]
}